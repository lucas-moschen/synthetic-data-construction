# -*- coding: utf-8 -*-
"""
@author: Lucas Moschen

This script transform the initial household data set generated by create_gmm_data_hhd.py and 
the initial dwelling data set generated by create_gmm_data_dwe.py into data sets with the selected 
number of households and dwellings.

    Parameters
    ----------
    initial_dwe_df_name : string
        Name of the file containing the initial dwelling data set. 
    initial_hhd_df_name : string
        Name of the file containing the initial household data set.
    amount_dwe : int
        Number of dwellings in the final dwelling data set.
    amount_hhd : int
        Number of households in the final household data set.
    final_dwe_df_name : string
        Name of the file containing the final dwelling data set. 
    final_hhd_df_name : string
        Name of the file containing the final household data set.

    Returns
    ----------
    None.
"""

import pandas as pd 
import numpy as np
import os
from code.get_files import get_path_to_folder

def create_final_data(initial_dwe_df_name: str,
                        initial_hhd_df_name: str,
                        amount_dwe: int,
                        amount_hhd: int,
                        final_dwe_df_name: str,
                        final_hhd_df_name: str):
    
    # Set seed
    seed_value = 10
    np.random.seed(seed_value)

    print("\nCreation of final dwelling data set:")

    # Get initial dwelling data set 
    df_path = get_path_to_folder("data/datasets/initial")
    df_path = os.path.join(df_path, initial_dwe_df_name)
    df = pd.read_csv(df_path)

    # Get amount of dwellings
    original_amount_dwe = df.shape[0]

    print("\nThe initial amount of dwellings is", original_amount_dwe)

    print("\nThe initial dwelling data set is:")
    print(df) 

    # Get amount of dwellings to remove
    amount_dwe_to_remove = original_amount_dwe - amount_dwe
    print("\nThe amount of dwellings to be removed is", amount_dwe_to_remove) 

    # Create the list of indices to be removed
    list_indices_to_remove = []
    while len(list_indices_to_remove) < amount_dwe_to_remove:
        index = np.random.randint(0, original_amount_dwe-1)
        if index not in list_indices_to_remove:
            list_indices_to_remove.append(index) 

    # Remove the dwellings corresponding to the selected indices
    df = df.drop(list_indices_to_remove)

    print("\nThe new dwelling data set is:")
    print(df) 
    print("\nIts amount of dwellings is", df.shape[0])

    # Get path to save final dwelling data set
    path_to_new_file_dwe = get_path_to_folder("data/datasets/final")
    path_to_new_file_dwe = os.path.join(path_to_new_file_dwe, final_dwe_df_name)

    # Save final dwelling data set
    df.to_csv(path_to_new_file_dwe, index=False) 

    print("\nThe new dwelling data set was saved at", path_to_new_file_dwe) 

    print("\nCreation of final household data set:") 

    # Get initial household data set
    df_path = get_path_to_folder("data/datasets/initial")
    df_path = os.path.join(df_path, initial_hhd_df_name)
    df = pd.read_csv(df_path)

    # Get amount of households
    original_amount_hhd = df.shape[0]
    print("\nThe initial amount of households is", original_amount_hhd)

    print("\nThe initial household data set is:")
    print(df) 

    # Get the amount of households to be removed
    amount_hhd_to_remove = original_amount_hhd - amount_hhd 
    print("\nThe amount of households to be removed is", amount_hhd_to_remove) 

    # Create the list of indices to be removed
    list_indices_to_remove = []
    while len(list_indices_to_remove) < amount_hhd_to_remove:
        index = np.random.randint(0, original_amount_hhd-1)
        if index not in list_indices_to_remove:
            list_indices_to_remove.append(index) 

    # Remove the households corresponding to the selected indices
    df = df.drop(list_indices_to_remove)

    print("\nThe new household data set is:")
    print(df) 
    print("\nIts amount of households is", df.shape[0])

    # Get path to save final household data set
    path_to_new_file_hhd = get_path_to_folder("data/datasets/final")
    path_to_new_file_hhd = os.path.join(path_to_new_file_hhd, final_hhd_df_name)

    # Save final household data set
    df.to_csv(path_to_new_file_hhd, index=False) 
    print("\nThe new household data set was saved at", path_to_new_file_hhd)